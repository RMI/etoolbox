[build-system]
requires = ["setuptools<66", "setuptools_scm[toml]<8"]
build-backend = "setuptools.build_meta"

[project]
name = "rmi.etoolbox"
description = "A set of tools and functions we use across projects."
license = {file = "LICENSE.txt"}
readme = "README.rst"
dynamic = ["version"]
classifiers = [
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",

]
requires-python = ">=3.10,<3.12"
dependencies = [
    "orjson >= 3.8, <3.10",
    "pandas >= 1.4,< 2.1",
    "pyarrow>=9, <13",
    "sqlalchemy>1.4,<2.1",
    "tzdata>=2022.7; platform_system=='Windows'",
]

[project.optional-dependencies]
dev = [
    "black[jupyter] >= 22,< 24",
    "docformatter>=1.5,<1.8",
    "build>=0.9",
    "ruff>0.0.215,<0.0.271",
    "tox>=3.20,<4.6",
    "twine>=4.0",
]
doc = [
    "doc8>=0.9,<1.2",  # Ensures clean documentation formatting
    "furo>=2022.4.7",  # A clean customisable Sphinx documentation theme.
    "rstcheck[sphinx,toml]>=5.0,<6.2",  # ReStructuredText linter
    "sphinx>=4,!=5.1.0,<7.0.2",
    "sphinx-autoapi>=1.8,<2.2",
    "sphinx-issues>=1.2,<3.1",
    "sphinx-autodoc-typehints>1.19,<1.23.5",
    "sphinxcontrib-mermaid>0.7,<0.9.0",
]
tests = [
    "blackdoc>=0.3.8,<0.3.9",  # runs black on doctests
    "coverage>=5.3,<7.3",  # Lets us track what code is being tested
    "polars>=0.16,<0.18",  # for testing with polars, of course
    "pre-commit>=2.9,<3.4",  # Allow us to run pre-commit hooks in testing
    "pytest>=6.2,<7.4",  # test framework
    "pytest-console-scripts>=1.1,<1.5",  # Allow automatic testing of scripts
    "pytest-cov>=2.10,<4.2",  # Pytest plugin for working with coverage
    "ruff>0.0.215,<0.0.271",
    "tox>=3.20,<4.6",  # Python test environment manager
    "tqdm >= 4.63,< 4.66",
    "requests_mock",
]
pudl-test = [
    "python-snappy>=0.6,<0.7",
    "platformdirs >=2.6,<3.6",
    "catalystcoop.pudl @ git+https://github.com/catalyst-cooperative/pudl.git@dev",
]

[tool.setuptools.dynamic]
version = {attr = "etoolbox._version.__version__"}

[tool.setuptools_scm]
write_to = "src/etoolbox/_version.py"

#######################################################################################
# Configurations for linters and other tools
#######################################################################################
[tool.black]
line-length = 88
target-version = ["py310", "py311"]
include = "\\.pyi?$"

[tool.doc8]
max-line-length = 88
ignore-path = "docs/_build"

[tool.docformatter]
wrap-summaries = 88
wrap-descriptions = 88

[tool.pytest.ini_options]
testpaths = ["."]
addopts = ["--verbose", "--doctest-modules"]
log_format = "%(asctime)s [%(levelname)8s] %(name)s:%(lineno)s %(message)s"
log_date_format=" %Y-%m-%d %H:%M:%S"
log_cli = true
log_cli_level = "INFO"
doctest_optionflags = ["NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL", "ELLIPSIS"]
filterwarnings = [
    "ignore:distutils Version classes are deprecated:DeprecationWarning",
    "ignore:Creating a LegacyVersion:DeprecationWarning:pkg_resources[.*]",
]

[tool.rstcheck]
report_level = "WARNING"
ignore_roles = ["pr", "issue", "user", "include"]
ignore_messages = '(Hyperlink target .* is not referenced\.$|Duplicate implicit target name:|An `AttributeError` error occured.*)'
ignore_directives = ["bibliography", "todo", "include"]

[tool.ruff]
line-length = 88
show-fixes = true
select = [  # https://beta.ruff.rs/docs/rules/
    "A", # flake8-builtins
    "B", # flake8-bugbear
    "C",
    "C4", # flake8-comprehensions
    "D", # flake8-docstrings
    "E",  # pycodestyle
    "F",  # Pyflakes
    "FBT", # flake8-boolean-trap
    "G", # flake8-logging-format
    "I", # isort
    "TID", # flake8-tidy-imports
    "N", # pep8-naming
    "PD",  # pandas
    "PT", # flake8-pytest-style
    "PGH", # pygrep-hooks
    "S", # bandit
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "UP", # pyupgrade
    "W",  # pycodestyle
    "RUF", # Ruff-specific rules
    "Q", # flake8-quotes
]
ignore = [
    "D105",
    "D203",  # 1 blank line required before class docstring
    "D213",  # Multi-line docstring summary should start at the second line
    "D401",  # First line of docstring should be in imperative mood: "{first_line}"
    "D407",  # dashed-underline-after-section, upsets Sphinx
    "D416",
]

[tool.ruff.pycodestyle]
max-doc-length = 88

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.flake8-type-checking]
strict = true

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"docs/conf.py" = ["E501"]
"tests/*.py" = [
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "F841",  # Local variable `pudl` is assigned to but never used
    "PD901",
    "PT006",  # Wrong name(s) type in `@pytest.mark.parametrize`, expected `tuple`
    "PT011",  # `pytest.raises(ValueError)` is too broad, set the `match` parameter or use a more specific exception
    "S101",  # Use of `assert` detected
    "SIM117",  # Use a single `with` statement with multiple contexts instead of nested `with` statements

]
"tests/unit/utils_remote_zip_test.py" = ["D102", "D103", "D107", "FBT002"]
"_test_classes.py" = ["FBT003"]
"pudl_helpers.py" = ["PD901"]

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 15
